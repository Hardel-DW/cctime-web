/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MessagesRouteImport } from './routes/messages'

const TokenLazyRouteImport = createFileRoute('/token')()
const SessionsLazyRouteImport = createFileRoute('/sessions')()
const PricesLazyRouteImport = createFileRoute('/prices')()
const DailyLazyRouteImport = createFileRoute('/daily')()
const IndexLazyRouteImport = createFileRoute('/')()

const TokenLazyRoute = TokenLazyRouteImport.update({
  id: '/token',
  path: '/token',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/token.lazy').then((d) => d.Route))
const SessionsLazyRoute = SessionsLazyRouteImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/sessions.lazy').then((d) => d.Route))
const PricesLazyRoute = PricesLazyRouteImport.update({
  id: '/prices',
  path: '/prices',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/prices.lazy').then((d) => d.Route))
const DailyLazyRoute = DailyLazyRouteImport.update({
  id: '/daily',
  path: '/daily',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/daily.lazy').then((d) => d.Route))
const MessagesRoute = MessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/messages.lazy').then((d) => d.Route))
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/messages': typeof MessagesRoute
  '/daily': typeof DailyLazyRoute
  '/prices': typeof PricesLazyRoute
  '/sessions': typeof SessionsLazyRoute
  '/token': typeof TokenLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/messages': typeof MessagesRoute
  '/daily': typeof DailyLazyRoute
  '/prices': typeof PricesLazyRoute
  '/sessions': typeof SessionsLazyRoute
  '/token': typeof TokenLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/messages': typeof MessagesRoute
  '/daily': typeof DailyLazyRoute
  '/prices': typeof PricesLazyRoute
  '/sessions': typeof SessionsLazyRoute
  '/token': typeof TokenLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/messages' | '/daily' | '/prices' | '/sessions' | '/token'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/messages' | '/daily' | '/prices' | '/sessions' | '/token'
  id:
    | '__root__'
    | '/'
    | '/messages'
    | '/daily'
    | '/prices'
    | '/sessions'
    | '/token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  MessagesRoute: typeof MessagesRoute
  DailyLazyRoute: typeof DailyLazyRoute
  PricesLazyRoute: typeof PricesLazyRoute
  SessionsLazyRoute: typeof SessionsLazyRoute
  TokenLazyRoute: typeof TokenLazyRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/token': {
      id: '/token'
      path: '/token'
      fullPath: '/token'
      preLoaderRoute: typeof TokenLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prices': {
      id: '/prices'
      path: '/prices'
      fullPath: '/prices'
      preLoaderRoute: typeof PricesLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daily': {
      id: '/daily'
      path: '/daily'
      fullPath: '/daily'
      preLoaderRoute: typeof DailyLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/messages': {
      id: '/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  MessagesRoute: MessagesRoute,
  DailyLazyRoute: DailyLazyRoute,
  PricesLazyRoute: PricesLazyRoute,
  SessionsLazyRoute: SessionsLazyRoute,
  TokenLazyRoute: TokenLazyRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
