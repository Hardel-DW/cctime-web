/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TokenRouteImport } from './routes/token'
import { Route as SessionsRouteImport } from './routes/sessions'
import { Route as PricesRouteImport } from './routes/prices'
import { Route as MessagesRouteImport } from './routes/messages'
import { Route as DailyRouteImport } from './routes/daily'
import { Route as IndexRouteImport } from './routes/index'

const TokenRoute = TokenRouteImport.update({
  id: '/token',
  path: '/token',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionsRoute = SessionsRouteImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => rootRouteImport,
} as any)
const PricesRoute = PricesRouteImport.update({
  id: '/prices',
  path: '/prices',
  getParentRoute: () => rootRouteImport,
} as any)
const MessagesRoute = MessagesRouteImport.update({
  id: '/messages',
  path: '/messages',
  getParentRoute: () => rootRouteImport,
} as any)
const DailyRoute = DailyRouteImport.update({
  id: '/daily',
  path: '/daily',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/messages': typeof MessagesRoute
  '/prices': typeof PricesRoute
  '/sessions': typeof SessionsRoute
  '/token': typeof TokenRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/messages': typeof MessagesRoute
  '/prices': typeof PricesRoute
  '/sessions': typeof SessionsRoute
  '/token': typeof TokenRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/daily': typeof DailyRoute
  '/messages': typeof MessagesRoute
  '/prices': typeof PricesRoute
  '/sessions': typeof SessionsRoute
  '/token': typeof TokenRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/daily' | '/messages' | '/prices' | '/sessions' | '/token'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/daily' | '/messages' | '/prices' | '/sessions' | '/token'
  id:
    | '__root__'
    | '/'
    | '/daily'
    | '/messages'
    | '/prices'
    | '/sessions'
    | '/token'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DailyRoute: typeof DailyRoute
  MessagesRoute: typeof MessagesRoute
  PricesRoute: typeof PricesRoute
  SessionsRoute: typeof SessionsRoute
  TokenRoute: typeof TokenRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/token': {
      id: '/token'
      path: '/token'
      fullPath: '/token'
      preLoaderRoute: typeof TokenRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prices': {
      id: '/prices'
      path: '/prices'
      fullPath: '/prices'
      preLoaderRoute: typeof PricesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/messages': {
      id: '/messages'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daily': {
      id: '/daily'
      path: '/daily'
      fullPath: '/daily'
      preLoaderRoute: typeof DailyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DailyRoute: DailyRoute,
  MessagesRoute: MessagesRoute,
  PricesRoute: PricesRoute,
  SessionsRoute: SessionsRoute,
  TokenRoute: TokenRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
