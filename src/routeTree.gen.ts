/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TokenUsageRouteImport } from './routes/token-usage'
import { Route as SessionsRouteImport } from './routes/sessions'
import { Route as SessionDetailsRouteImport } from './routes/session-details'
import { Route as PricesRouteImport } from './routes/prices'
import { Route as DailyActivityRouteImport } from './routes/daily-activity'
import { Route as IndexRouteImport } from './routes/index'

const TokenUsageRoute = TokenUsageRouteImport.update({
  id: '/token-usage',
  path: '/token-usage',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionsRoute = SessionsRouteImport.update({
  id: '/sessions',
  path: '/sessions',
  getParentRoute: () => rootRouteImport,
} as any)
const SessionDetailsRoute = SessionDetailsRouteImport.update({
  id: '/session-details',
  path: '/session-details',
  getParentRoute: () => rootRouteImport,
} as any)
const PricesRoute = PricesRouteImport.update({
  id: '/prices',
  path: '/prices',
  getParentRoute: () => rootRouteImport,
} as any)
const DailyActivityRoute = DailyActivityRouteImport.update({
  id: '/daily-activity',
  path: '/daily-activity',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/daily-activity': typeof DailyActivityRoute
  '/prices': typeof PricesRoute
  '/session-details': typeof SessionDetailsRoute
  '/sessions': typeof SessionsRoute
  '/token-usage': typeof TokenUsageRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/daily-activity': typeof DailyActivityRoute
  '/prices': typeof PricesRoute
  '/session-details': typeof SessionDetailsRoute
  '/sessions': typeof SessionsRoute
  '/token-usage': typeof TokenUsageRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/daily-activity': typeof DailyActivityRoute
  '/prices': typeof PricesRoute
  '/session-details': typeof SessionDetailsRoute
  '/sessions': typeof SessionsRoute
  '/token-usage': typeof TokenUsageRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/daily-activity'
    | '/prices'
    | '/session-details'
    | '/sessions'
    | '/token-usage'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/daily-activity'
    | '/prices'
    | '/session-details'
    | '/sessions'
    | '/token-usage'
  id:
    | '__root__'
    | '/'
    | '/daily-activity'
    | '/prices'
    | '/session-details'
    | '/sessions'
    | '/token-usage'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DailyActivityRoute: typeof DailyActivityRoute
  PricesRoute: typeof PricesRoute
  SessionDetailsRoute: typeof SessionDetailsRoute
  SessionsRoute: typeof SessionsRoute
  TokenUsageRoute: typeof TokenUsageRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/token-usage': {
      id: '/token-usage'
      path: '/token-usage'
      fullPath: '/token-usage'
      preLoaderRoute: typeof TokenUsageRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessions': {
      id: '/sessions'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/session-details': {
      id: '/session-details'
      path: '/session-details'
      fullPath: '/session-details'
      preLoaderRoute: typeof SessionDetailsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/prices': {
      id: '/prices'
      path: '/prices'
      fullPath: '/prices'
      preLoaderRoute: typeof PricesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/daily-activity': {
      id: '/daily-activity'
      path: '/daily-activity'
      fullPath: '/daily-activity'
      preLoaderRoute: typeof DailyActivityRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DailyActivityRoute: DailyActivityRoute,
  PricesRoute: PricesRoute,
  SessionDetailsRoute: SessionDetailsRoute,
  SessionsRoute: SessionsRoute,
  TokenUsageRoute: TokenUsageRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
